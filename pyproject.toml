[project]
name = "payroll-agent"
version = "0.1.0"
description = "An intelligent payroll document parsing agent using VLM and ReAct patterns"
authors = [
    { name = "Payroll Agent Team", email = "contact@payroll-agent.com" },
]
readme = "README.md"
license = { text = "MIT" }
requires-python = ">=3.9,<4.0"
dependencies = [
    # Core LangChain and LangGraph
    "langgraph>=0.2.50",
    "langchain>=0.2.14",
    "langchain-core>=0.3.25",
    "langchain-groq>=0.2.1",
    "langchain-openai>=0.2.9",
    
    # Data modeling and validation
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    "typing-extensions>=4.0.0",
    
    # Document processing
    "PyMuPDF>=1.25.1",        # PDF processing and conversion
    "Pillow>=10.0.0",         # Image processing and manipulation
    "pytesseract>=0.3.10",    # OCR for text extraction fallback
    
    # File handling and utilities
    "python-dotenv>=1.0.1",     # Environment variable management
    "python-multipart>=0.0.6",  # File upload handling
    "aiofiles>=23.0.0",         # Async file operations
    "python-magic>=0.4.27",     # File type detection
    
    # Web interface
    "streamlit>=1.40.2",      # Web app framework
    "pandas>=2.2.3",          # Data manipulation and export
    
    # Additional utilities
    "requests>=2.31.0",       # HTTP requests
    "httpx>=0.25.0",          # Async HTTP client
]

[project.optional-dependencies]
dev = [
    # Testing
    "pytest>=8.3.5",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    
    # Code quality
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "ruff>=0.6.1",
    
    # Development tools
    "langgraph-cli[inmem]>=0.1.71",
    "ipython>=8.0.0",
    "jupyter>=1.0.0",
]

[build-system]
requires = ["setuptools>=68.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = ["react_agent"]

[tool.setuptools.package-dir]
"react_agent" = "src/react_agent"

[tool.setuptools.package-data]
"*" = ["py.typed"]

[tool.ruff]
line-length = 88
target-version = "py39"

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "F",    # pyflakes
    "I",    # isort
    "D",    # pydocstyle
    "UP",   # pyupgrade
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "T201", # print statements
]
ignore = [
    "D100",  # Missing docstring in public module
    "D101",  # Missing docstring in public class
    "D102",  # Missing docstring in public method
    "D103",  # Missing docstring in public function
    "D104",  # Missing docstring in public package
    "D105",  # Missing docstring in magic method
    "D417",  # Missing argument descriptions in docstrings
    "E501",  # Line too long
    "UP006", # Use `list` instead of `List` for type annotation
    "UP007", # Use `X | Y` instead of `Union[X, Y]`
    "UP035", # Import from `typing_extensions` instead of `typing`
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["D", "T201"]
"test_*.py" = ["D", "T201"]
"**/test_*.py" = ["D", "T201"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
(
    /(
        \.eggs
        | \.git
        | \.hg
        | \.mypy_cache
        | \.tox
        | \.venv
        | _build
        | buck-out
        | build
        | dist
    )/
)
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "fitz.*",
    "pytesseract.*",
    "streamlit.*",
    "pandas.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--disable-warnings",
    "--tb=short",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["src/react_agent"]
omit = ["tests/*", "test_*.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
